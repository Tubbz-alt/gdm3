Debian #495797
GNOME #530585
Upstream commits r6682, r6734

Index: gdm-2.20.9/daemon/gdm-xdmcp-manager.c
===================================================================
--- gdm-2.20.9.orig/daemon/gdm-xdmcp-manager.c	2009-02-27 19:17:47.398915057 +0100
+++ gdm-2.20.9/daemon/gdm-xdmcp-manager.c	2009-02-27 19:18:49.550912728 +0100
@@ -401,12 +401,12 @@ create_socket (struct addrinfo *ai)
 
 	sock = socket (ai->ai_family, ai->ai_socktype, ai->ai_protocol);
 	if (sock < 0) {
-		gdm_debug ("socket: %s", g_strerror (errno));
+		gdm_error ("socket: %s", g_strerror (errno));
 		return sock;
 	}
 
 	if (bind (sock, ai->ai_addr, ai->ai_addrlen) < 0) {
-		gdm_debug ("bind: %s", g_strerror (errno));
+		gdm_error ("bind: %s", g_strerror (errno));
 		close (sock);
 		return -1;
 	}
@@ -728,7 +728,6 @@ gdm_xdmcp_send_willing (GdmXdmcpManager 
 
 		s = get_willing_output (manager);
 		if (s != NULL) {
-			g_free (last_status);
 			last_status = s;
 		} else {
 			last_status = g_strdup (manager->priv->sysid);
@@ -2169,12 +2168,12 @@ gdm_xdmcp_handle_manage (GdmXdmcpManager
 		g_free (host);
 		return;
 	}
-	g_free (host);
 
 	/* SessionID */
 	if G_UNLIKELY (! XdmcpReadCARD32 (&manager->priv->buf, &clnt_sessid)) {
 		gdm_debug ("%s: Could not read Session ID",
 			   "gdm_xdmcp_handle_manage");
+		g_free (host);
 		return;
 	}
 
@@ -2182,6 +2181,7 @@ gdm_xdmcp_handle_manage (GdmXdmcpManager
 	if G_UNLIKELY (! XdmcpReadCARD16 (&manager->priv->buf, &clnt_dspnum)) {
 		gdm_debug ("%s: Could not read Display Number",
 			   "gdm_xdmcp_handle_manage");
+		g_free (host);
 		return;
 	}
 
@@ -2189,6 +2189,7 @@ gdm_xdmcp_handle_manage (GdmXdmcpManager
 	if G_UNLIKELY (! XdmcpReadARRAY8 (&manager->priv->buf, &clnt_dspclass)) {
 		gdm_debug ("%s: Could not read Display Class",
 			   "gdm_xdmcp_handle_manage");
+		g_free (host);
 		return;
 	}
 
@@ -2198,6 +2199,7 @@ gdm_xdmcp_handle_manage (GdmXdmcpManager
 			   (int)clnt_dspnum, (long)clnt_sessid, ve_sure_string (s), host);
 		g_free (s);
 	}
+	g_free (host);
 
 	d = gdm_xdmcp_display_lookup (manager, clnt_sessid);
 	if (d != NULL &&
Index: gdm-2.20.9/daemon/server.c
===================================================================
--- gdm-2.20.9.orig/daemon/server.c	2009-02-27 19:17:52.255411763 +0100
+++ gdm-2.20.9/daemon/server.c	2009-02-27 19:20:54.646912568 +0100
@@ -968,15 +968,25 @@ gdm_server_resolve_command_line (GdmDisp
 			g_shell_parse_argv (str, &argc, &argv, NULL);
 
 		} else {
+			GError* error_p;
 			char **svr_command;
 			const char *str;
 			int svr_argc;
 
 			str = ve_sure_string (svr->command);
 			svr_command = NULL;
-			g_shell_parse_argv (str, &svr_argc, &svr_command, NULL);
 
-			g_shell_parse_argv (disp->command, &argc, &argv, NULL);
+			g_shell_parse_argv (str, &svr_argc,
+				&svr_command, &error_p);
+
+			g_shell_parse_argv (disp->command, &argc,
+				&argv, &error_p);
+
+			if (argv == NULL) {
+				gdm_debug ("Problem parsing server command <%s>",
+					disp->command ? disp->command : "(null)");
+				return FALSE;
+			}
 
 			if (argv[0] == NULL || argv[1] == NULL) {
 				g_strfreev (argv);
@@ -1092,6 +1102,7 @@ gdm_server_spawn (GdmDisplay *d, const c
     int logfd;
     char *command;
     pid_t pid;
+    gboolean rc;
 
     if (d == NULL ||
 	ve_string_empty (d->command)) {
@@ -1114,11 +1125,13 @@ gdm_server_spawn (GdmDisplay *d, const c
     /* Figure out the server command */
     argv = NULL;
     argc = 0;
-    gdm_server_resolve_command_line (d,
-				     TRUE /* resolve flags */,
-				     vtarg,
-				     &argc,
-				     &argv);
+    rc = gdm_server_resolve_command_line (d,
+				         TRUE /* resolve flags */,
+				         vtarg,
+				         &argc,
+				         &argv);
+    if (rc == FALSE)
+       return;
 
     /* Do not support additional session arguments with Xnest. */
     if (d->type != TYPE_FLEXI_XNEST) {
Index: gdm-2.20.9/daemon/gdm.c
===================================================================
--- gdm-2.20.9.orig/daemon/gdm.c	2009-02-27 19:20:05.659412969 +0100
+++ gdm-2.20.9/daemon/gdm.c	2009-02-27 19:20:40.922914825 +0100
@@ -1901,16 +1901,24 @@ write_x_servers (GdmDisplay *d)
 	}
 
 	if (SERVER_IS_LOCAL (d)) {
-		char **argv;
-		char *command;
-		int argc;
+		char    **argv;
+		char     *command;
+		int       argc;
+		gboolean  rc;
+
 		argc = 0;
 		argv = NULL;
-		gdm_server_resolve_command_line (d,
-						 FALSE, /* resolve_flags */
-						 NULL, /* vtarg */
-						 &argc,
-						 &argv);
+		rc   = gdm_server_resolve_command_line (d,
+						        FALSE, /* resolve_flags */
+						        NULL, /* vtarg */
+						        &argc,
+						        &argv);
+
+		if (rc == FALSE) {
+			g_free (file);
+			return;
+		}
+
 		command = g_strjoinv (" ", argv);
 		g_strfreev (argv);
 		VE_IGNORE_EINTR (fprintf (fp, "%s local %s\n", d->name, command));
