--- a/gui/simple-greeter/gdm-greeter-panel.c
+++ b/gui/simple-greeter/gdm-greeter-panel.c
@@ -61,8 +61,10 @@
 #define GPM_DBUS_INTERFACE "org.gnome.SettingsDaemon.Power"
 
 #define LOGIN_SCREEN_SCHEMA           "org.gnome.login-screen"
+#define A11Y_APPS_SCHEMA              "org.gnome.desktop.a11y.applications"
 
 #define KEY_DISABLE_RESTART_BUTTONS   "disable-restart-buttons"
+#define KEY_SCREEN_READER_ENABLED     "screen-reader-enabled"
 
 #define KEY_NOTIFICATION_AREA_PADDING "/apps/notification_area_applet/prefs/padding"
 
@@ -79,6 +81,7 @@
         GtkWidget              *hostname_label;
         GtkWidget              *clock;
         GtkWidget              *status_menubar;
+        GtkWidget              *a11y_menu;
         GtkWidget              *shutdown_menu;
 
         GdmTimer               *animation_timer;
@@ -869,6 +872,59 @@
 }
 
 static void
+toggle_screen_reader (GtkCheckMenuItem *checkmenuitem,
+                      gpointer user_data)
+{
+        GSettings *settings;
+        gboolean enabled;
+
+        settings = g_settings_new (A11Y_APPS_SCHEMA);
+
+        enabled = g_settings_get_boolean (settings, KEY_SCREEN_READER_ENABLED);
+
+        g_settings_set_boolean (settings, KEY_SCREEN_READER_ENABLED, !enabled);
+}
+
+static void
+add_a11y_menu (GdmGreeterPanel *panel)
+{
+        GtkWidget *item;
+        GtkWidget *menu_item;
+        GtkWidget *box;
+        GtkWidget *image;
+        GIcon     *gicon;
+        GSettings *settings;
+        gboolean   enabled;
+
+        item = gtk_menu_item_new ();
+        override_style (item);
+        box = gtk_hbox_new (FALSE, 0);
+        gtk_container_add (GTK_CONTAINER (item), box);
+        gtk_menu_shell_append (GTK_MENU_SHELL (panel->priv->status_menubar), item);
+        image = gtk_image_new ();
+        override_style (image);
+
+        gicon = g_themed_icon_new ("preferences-desktop-accessibility-symbolic");
+        gtk_image_set_from_gicon (GTK_IMAGE (image), gicon, GTK_ICON_SIZE_MENU);
+        g_object_unref (gicon);
+
+        gtk_box_pack_start (GTK_BOX (box), image, FALSE, FALSE, 0);
+
+        panel->priv->a11y_menu = gtk_menu_new ();
+        gtk_menu_item_set_submenu (GTK_MENU_ITEM (item), panel->priv->a11y_menu);
+
+        settings = g_settings_new (A11Y_APPS_SCHEMA);
+        enabled = g_settings_get_boolean (settings, KEY_SCREEN_READER_ENABLED);
+
+        menu_item = gtk_check_menu_item_new_with_label (_("Screen Reader"));
+        gtk_check_menu_item_set_active (GTK_CHECK_MENU_ITEM (menu_item), enabled);
+        g_signal_connect (G_OBJECT (menu_item), "toggled", G_CALLBACK (toggle_screen_reader), NULL);
+        gtk_menu_shell_append (GTK_MENU_SHELL (panel->priv->a11y_menu), menu_item);
+
+        gtk_widget_show_all (item);
+}
+
+static void
 add_shutdown_menu (GdmGreeterPanel *panel)
 {
         GtkWidget *item;
@@ -1019,6 +1075,8 @@
         gtk_widget_show (panel->priv->status_menubar);
         gtk_box_pack_end (GTK_BOX (panel->priv->right_hbox), GTK_WIDGET (panel->priv->status_menubar), FALSE, FALSE, 0);
 
+        add_a11y_menu (panel);
+
         if (!panel->priv->display_is_local || get_show_restart_buttons (panel)) {
                 add_shutdown_menu (panel);
         }
