Description: session-worker: unblock SIGUSR1 before PAM
 Right now we unblock SIGUSR1 just before starting
 the session, but we should really do it before
 starting the worker/PAM.

 This commit fixes that and removes a useless call
 to set SIGUSR1 back to the default disposition,
 right before exec (which does the same thing anyway)
 .
 gdm3 (3.28.2-3ubuntu2) cosmic; urgency=medium
 .
   * Unblock SIGUSR1 before PAM. (LP: #1782152)

Origin: upstream, https://gitlab.gnome.org/GNOME/gdm/commit/b0d1ca9ebf605abb63b95ef73d56d56a1109002e
Bug: https://gitlab.gnome.org/GNOME/gdm/issues/399
Bug-Debian: https://bugs.debian.org/905277
Bug-Ubuntu: https://bugs.launchpad.net/bugs/1782152
Last-Update: 2018-07-23
Index: gdm3-3.28.2/daemon/gdm-session-worker-job.c
===================================================================
--- gdm3-3.28.2.orig/daemon/gdm-session-worker-job.c
+++ gdm3-3.28.2/daemon/gdm-session-worker-job.c
@@ -117,12 +117,19 @@ session_worker_job_setup_journal_fds (vo
 static void
 session_worker_job_child_setup (GdmSessionWorkerJob *session_worker_job)
 {
+        sigset_t mask;
         session_worker_job_setup_journal_fds ();
 
         /* Terminate the process when the parent dies */
 #ifdef HAVE_SYS_PRCTL_H
         prctl (PR_SET_PDEATHSIG, SIGTERM);
 #endif
+        /*
+         * Reset signal mask to default since it was altered by the
+         * manager process
+         */
+        sigemptyset (&mask);
+        sigprocmask (SIG_SETMASK, &mask, NULL);
 }
 
 static void
Index: gdm3-3.28.2/daemon/gdm-session-worker.c
===================================================================
--- gdm3-3.28.2.orig/daemon/gdm-session-worker.c
+++ gdm3-3.28.2/daemon/gdm-session-worker.c
@@ -2025,8 +2025,6 @@ gdm_session_worker_start_session (GdmSes
                 char  *home_dir;
                 int    stdin_fd = -1, stdout_fd = -1, stderr_fd = -1;
                 gboolean has_journald = FALSE, needs_controlling_terminal = FALSE;
-                sigset_t mask;
-
                 /* Leak the TTY into the session as stdin so that it stays open
                  * without any races. */
                 if (worker->priv->session_tty_fd > 0) {
@@ -2147,19 +2145,6 @@ gdm_session_worker_start_session (GdmSes
                  */
                 signal (SIGPIPE, SIG_DFL);
 
-                /*
-                 * Reset SIGUSR1 to default since it was blocked by the manager
-                 * process for the X server startup handshake
-                 */
-                signal (SIGUSR1, SIG_DFL);
-
-                /*
-                 * Reset signal mask to default since it was altered by the
-                 * manager process
-                 */
-                sigemptyset (&mask);
-                sigprocmask (SIG_SETMASK, &mask, NULL);
-
                 gdm_session_execute (worker->priv->arguments[0],
                                      worker->priv->arguments,
                                      (char **)
